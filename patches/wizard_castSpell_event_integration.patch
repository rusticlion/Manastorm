diff --git a/wizard.lua b/wizard.lua
--- a/wizard.lua
+++ b/wizard.lua
@@ -9,7 +9,10 @@
 local Constants = require("core.Constants")
 local SpellsModule = require("spells")
 local Spells = SpellsModule.spells  -- For backwards compatibility
+
+-- Load the EventRunner for event-based spell execution
+local EventRunner = require("systems.EventRunner")
 
 -- We'll use game.compiledSpells instead of a local compiled spells table
 
@@ -315,12 +318,26 @@ function Wizard:castSpell(spellSlot)
     -- Execute spell behavior using the compiled spell if available
     local effect = {}
     if spellToUse.executeAll then
-        -- Use the compiled spell's executeAll method
-        effect = spellToUse.executeAll(self, target, {}, spellSlot)
-        print("Executed compiled spell: " .. spellToUse.name)
+        -- Check if we're using the event system
+        if _G.USE_EVENT_SYSTEM then
+            -- Use the event-based execution
+            print("Executing spell via event system: " .. spellToUse.name)
+            
+            -- Execute the spell, which now uses EventRunner internally
+            effect = spellToUse.executeAll(self, target, {}, spellSlot)
+            
+            -- Debug output if enabled
+            if _G.DEBUG_EVENTS and effect.events then
+                print("Spell generated " .. #effect.events .. " events")
+            end
+        else
+            -- Use the legacy direct execution method
+            effect = spellToUse.executeAll(self, target, {}, spellSlot)
+            print("Executed compiled spell: " .. spellToUse.name)
+        end
     else
         -- Fall back to the legacy keyword system for compatibility
-        effect = SpellsModule.keywordSystem.castSpell(
+        effect = SpellsModule.keywordSystem.castSpell(
             slot.spell,
             self,
             {